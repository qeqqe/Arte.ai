services:
  auth:
    build:
      context: ./packages/api
      dockerfile: apps/auth/Dockerfile
      target: development
    command: sh -c '/wait-for.sh rabbitmq 5672 -- pnpm run start:dev auth'
    env_file:
      - ./packages/api/apps/auth/.env
    ports:
      - '3001:3001'
    volumes:
      - /app/node_modules/
      - /app/apps/auth/node_modules/
    develop:
      watch:
        - action: sync
          path: ./packages/api
          target: /app
          ignore:
            - node_modules/
            - .git/
            - dist/
        - action: rebuild
          path: package.json
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    dns:
      - 8.8.8.8
      - 8.8.4.4

  ingestion:
    build:
      context: ./packages/api
      dockerfile: apps/ingestion/Dockerfile
      target: development
    command: sh -c '/wait-for.sh rabbitmq 5672 -- pnpm run start:dev ingestion'
    env_file:
      - ./packages/api/apps/ingestion/.env
    ports:
      - '3002:3002'
    volumes:
      - /app/node_modules/
      - /app/apps/ingestion/node_modules/
    develop:
      watch:
        - action: sync
          path: ./packages/api
          target: /app
          ignore:
            - node_modules/
            - .git/
            - dist/
        - action: rebuild
          path: package.json
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    dns:
      - 8.8.8.8
      - 8.8.4.4

  stat-analysis:
    build:
      context: ./packages/api
      dockerfile: apps/analysis/Dockerfile
      target: development
    command: sh -c '/wait-for.sh rabbitmq 5672 -- pnpm run start:dev analysis'
    env_file:
      - ./packages/api/apps/analysis/.env
    ports:
      - '3003:3003'
    volumes:
      - /app/node_modules/
      - /app/apps/analysis/node_modules/
    develop:
      watch:
        - action: sync
          path: ./packages/api
          target: /app
          ignore:
            - node_modules/
            - .git/
            - dist/
        - action: rebuild
          path: package.json
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    environment:
      - RABBITMQ_URI=amqp://guest:guest@rabbitmq:5672
    dns:
      - 8.8.8.8
      - 8.8.4.4

  client:
    build:
      context: ./packages/client
      dockerfile: Dockerfile
      target: development
    ports:
      - '3000:3000'
    volumes:
      - ./packages/client:/app
      - /app/node_modules/
    develop:
      watch:
        - action: sync
          path: ./packages/client
          target: /app
          ignore:
            - node_modules/
            - .next/
            - dist/
        - action: rebuild
          path: ./packages/client/package.json
        - action: restart
          path: ./packages/client/pnpm-lock.yaml
    environment:
      - NEXT_PUBLIC_BACKEND_AUTH_URL=http://localhost:3001
      - WATCHPACK_POLLING=true
    networks:
      - app-network
    restart: always

  python-ml-service:
    build:
      context: ./packages/python-ml-service
      dockerfile: Dockerfile
      target: development
    ports:
      - '5000:5000'
    env_file:
      - ./packages/python-ml-service/.env
    volumes:
      - ./packages/python-ml-service:/app
      - /app/__pycache__/
      - /app/.venv/
    develop:
      watch:
        - action: sync
          path: ./packages/python-ml-service
          target: /app
          ignore:
            - __pycache__/
            - .venv/
        - action: rebuild
          path: ./packages/python-ml-service/requirements.txt
    networks:
      - app-network
    depends_on:
      rabbitmq:
        condition: service_healthy
    dns:
      - 8.8.8.8
      - 8.8.4.4

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    container_name: rabbitmq
    restart: always
    ports:
      - '5672:5672' # AMQP port
      - '15672:15672' # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'check_port_connectivity']
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - app-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

networks:
  app-network:
    driver: bridge

volumes:
  rabbitmq_data:
